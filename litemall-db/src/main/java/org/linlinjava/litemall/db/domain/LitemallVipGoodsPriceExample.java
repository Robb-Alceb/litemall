package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallVipGoodsPriceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public LitemallVipGoodsPriceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public LitemallVipGoodsPriceExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public LitemallVipGoodsPriceExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallVipGoodsPriceExample example = new LitemallVipGoodsPriceExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public LitemallVipGoodsPriceExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public LitemallVipGoodsPriceExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNull() {
            addCriterion("goods_id is null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNotNull() {
            addCriterion("goods_id is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdEqualTo(Integer value) {
            addCriterion("goods_id =", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotEqualTo(Integer value) {
            addCriterion("goods_id <>", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThan(Integer value) {
            addCriterion("goods_id >", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("goods_id >=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThan(Integer value) {
            addCriterion("goods_id <", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThanOrEqualTo(Integer value) {
            addCriterion("goods_id <=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdIn(List<Integer> values) {
            addCriterion("goods_id in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotIn(List<Integer> values) {
            addCriterion("goods_id not in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdBetween(Integer value1, Integer value2) {
            addCriterion("goods_id between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("goods_id not between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNull() {
            addCriterion("goods_name is null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNotNull() {
            addCriterion("goods_name is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameEqualTo(String value) {
            addCriterion("goods_name =", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotEqualTo(String value) {
            addCriterion("goods_name <>", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThan(String value) {
            addCriterion("goods_name >", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThanOrEqualTo(String value) {
            addCriterion("goods_name >=", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThan(String value) {
            addCriterion("goods_name <", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThanOrEqualTo(String value) {
            addCriterion("goods_name <=", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("goods_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLike(String value) {
            addCriterion("goods_name like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotLike(String value) {
            addCriterion("goods_name not like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIn(List<String> values) {
            addCriterion("goods_name in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotIn(List<String> values) {
            addCriterion("goods_name not in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameBetween(String value1, String value2) {
            addCriterion("goods_name between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotBetween(String value1, String value2) {
            addCriterion("goods_name not between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceIsNull() {
            addCriterion("silver_vip_price is null");
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceIsNotNull() {
            addCriterion("silver_vip_price is not null");
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceEqualTo(BigDecimal value) {
            addCriterion("silver_vip_price =", value, "silverVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andSilverVipPriceEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("silver_vip_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceNotEqualTo(BigDecimal value) {
            addCriterion("silver_vip_price <>", value, "silverVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andSilverVipPriceNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("silver_vip_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceGreaterThan(BigDecimal value) {
            addCriterion("silver_vip_price >", value, "silverVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andSilverVipPriceGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("silver_vip_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("silver_vip_price >=", value, "silverVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andSilverVipPriceGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("silver_vip_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceLessThan(BigDecimal value) {
            addCriterion("silver_vip_price <", value, "silverVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andSilverVipPriceLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("silver_vip_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("silver_vip_price <=", value, "silverVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andSilverVipPriceLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("silver_vip_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceIn(List<BigDecimal> values) {
            addCriterion("silver_vip_price in", values, "silverVipPrice");
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceNotIn(List<BigDecimal> values) {
            addCriterion("silver_vip_price not in", values, "silverVipPrice");
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("silver_vip_price between", value1, value2, "silverVipPrice");
            return (Criteria) this;
        }

        public Criteria andSilverVipPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("silver_vip_price not between", value1, value2, "silverVipPrice");
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceIsNull() {
            addCriterion("gold_vip_price is null");
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceIsNotNull() {
            addCriterion("gold_vip_price is not null");
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceEqualTo(BigDecimal value) {
            addCriterion("gold_vip_price =", value, "goldVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoldVipPriceEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("gold_vip_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceNotEqualTo(BigDecimal value) {
            addCriterion("gold_vip_price <>", value, "goldVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoldVipPriceNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("gold_vip_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceGreaterThan(BigDecimal value) {
            addCriterion("gold_vip_price >", value, "goldVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoldVipPriceGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("gold_vip_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("gold_vip_price >=", value, "goldVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoldVipPriceGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("gold_vip_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceLessThan(BigDecimal value) {
            addCriterion("gold_vip_price <", value, "goldVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoldVipPriceLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("gold_vip_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("gold_vip_price <=", value, "goldVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andGoldVipPriceLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("gold_vip_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceIn(List<BigDecimal> values) {
            addCriterion("gold_vip_price in", values, "goldVipPrice");
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceNotIn(List<BigDecimal> values) {
            addCriterion("gold_vip_price not in", values, "goldVipPrice");
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gold_vip_price between", value1, value2, "goldVipPrice");
            return (Criteria) this;
        }

        public Criteria andGoldVipPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gold_vip_price not between", value1, value2, "goldVipPrice");
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceIsNull() {
            addCriterion("platinum_vip_price is null");
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceIsNotNull() {
            addCriterion("platinum_vip_price is not null");
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceEqualTo(BigDecimal value) {
            addCriterion("platinum_vip_price =", value, "platinumVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andPlatinumVipPriceEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("platinum_vip_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceNotEqualTo(BigDecimal value) {
            addCriterion("platinum_vip_price <>", value, "platinumVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andPlatinumVipPriceNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("platinum_vip_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceGreaterThan(BigDecimal value) {
            addCriterion("platinum_vip_price >", value, "platinumVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andPlatinumVipPriceGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("platinum_vip_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("platinum_vip_price >=", value, "platinumVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andPlatinumVipPriceGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("platinum_vip_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceLessThan(BigDecimal value) {
            addCriterion("platinum_vip_price <", value, "platinumVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andPlatinumVipPriceLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("platinum_vip_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("platinum_vip_price <=", value, "platinumVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andPlatinumVipPriceLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("platinum_vip_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceIn(List<BigDecimal> values) {
            addCriterion("platinum_vip_price in", values, "platinumVipPrice");
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceNotIn(List<BigDecimal> values) {
            addCriterion("platinum_vip_price not in", values, "platinumVipPrice");
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("platinum_vip_price between", value1, value2, "platinumVipPrice");
            return (Criteria) this;
        }

        public Criteria andPlatinumVipPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("platinum_vip_price not between", value1, value2, "platinumVipPrice");
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceIsNull() {
            addCriterion("diamond_vip_price is null");
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceIsNotNull() {
            addCriterion("diamond_vip_price is not null");
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceEqualTo(BigDecimal value) {
            addCriterion("diamond_vip_price =", value, "diamondVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDiamondVipPriceEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("diamond_vip_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceNotEqualTo(BigDecimal value) {
            addCriterion("diamond_vip_price <>", value, "diamondVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDiamondVipPriceNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("diamond_vip_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceGreaterThan(BigDecimal value) {
            addCriterion("diamond_vip_price >", value, "diamondVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDiamondVipPriceGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("diamond_vip_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("diamond_vip_price >=", value, "diamondVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDiamondVipPriceGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("diamond_vip_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceLessThan(BigDecimal value) {
            addCriterion("diamond_vip_price <", value, "diamondVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDiamondVipPriceLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("diamond_vip_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("diamond_vip_price <=", value, "diamondVipPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDiamondVipPriceLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("diamond_vip_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceIn(List<BigDecimal> values) {
            addCriterion("diamond_vip_price in", values, "diamondVipPrice");
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceNotIn(List<BigDecimal> values) {
            addCriterion("diamond_vip_price not in", values, "diamondVipPrice");
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("diamond_vip_price between", value1, value2, "diamondVipPrice");
            return (Criteria) this;
        }

        public Criteria andDiamondVipPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("diamond_vip_price not between", value1, value2, "diamondVipPrice");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddUserIdIsNull() {
            addCriterion("add_user_id is null");
            return (Criteria) this;
        }

        public Criteria andAddUserIdIsNotNull() {
            addCriterion("add_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andAddUserIdEqualTo(Integer value) {
            addCriterion("add_user_id =", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdNotEqualTo(Integer value) {
            addCriterion("add_user_id <>", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdGreaterThan(Integer value) {
            addCriterion("add_user_id >", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("add_user_id >=", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdLessThan(Integer value) {
            addCriterion("add_user_id <", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("add_user_id <=", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("add_user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdIn(List<Integer> values) {
            addCriterion("add_user_id in", values, "addUserId");
            return (Criteria) this;
        }

        public Criteria andAddUserIdNotIn(List<Integer> values) {
            addCriterion("add_user_id not in", values, "addUserId");
            return (Criteria) this;
        }

        public Criteria andAddUserIdBetween(Integer value1, Integer value2) {
            addCriterion("add_user_id between", value1, value2, "addUserId");
            return (Criteria) this;
        }

        public Criteria andAddUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("add_user_id not between", value1, value2, "addUserId");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdIsNull() {
            addCriterion("update_user_id is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdIsNotNull() {
            addCriterion("update_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdEqualTo(Integer value) {
            addCriterion("update_user_id =", value, "updateUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateUserIdEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdNotEqualTo(Integer value) {
            addCriterion("update_user_id <>", value, "updateUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateUserIdNotEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdGreaterThan(Integer value) {
            addCriterion("update_user_id >", value, "updateUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateUserIdGreaterThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_user_id >=", value, "updateUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateUserIdGreaterThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdLessThan(Integer value) {
            addCriterion("update_user_id <", value, "updateUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateUserIdLessThanColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("update_user_id <=", value, "updateUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andUpdateUserIdLessThanOrEqualToColumn(LitemallVipGoodsPrice.Column column) {
            addCriterion(new StringBuilder("update_user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdIn(List<Integer> values) {
            addCriterion("update_user_id in", values, "updateUserId");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdNotIn(List<Integer> values) {
            addCriterion("update_user_id not in", values, "updateUserId");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdBetween(Integer value1, Integer value2) {
            addCriterion("update_user_id between", value1, value2, "updateUserId");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("update_user_id not between", value1, value2, "updateUserId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        private LitemallVipGoodsPriceExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        protected Criteria(LitemallVipGoodsPriceExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public LitemallVipGoodsPriceExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallVipGoodsPrice.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallVipGoodsPrice.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_vip_goods_price
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_vip_goods_price
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_vip_goods_price
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallVipGoodsPriceExample example);
    }
}