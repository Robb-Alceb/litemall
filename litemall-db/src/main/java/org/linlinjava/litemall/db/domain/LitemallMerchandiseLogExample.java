package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallMerchandiseLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public LitemallMerchandiseLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public LitemallMerchandiseLogExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public LitemallMerchandiseLogExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallMerchandiseLogExample example = new LitemallMerchandiseLogExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public LitemallMerchandiseLogExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public LitemallMerchandiseLogExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andShopIdIsNull() {
            addCriterion("shop_id is null");
            return (Criteria) this;
        }

        public Criteria andShopIdIsNotNull() {
            addCriterion("shop_id is not null");
            return (Criteria) this;
        }

        public Criteria andShopIdEqualTo(Integer value) {
            addCriterion("shop_id =", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andShopIdEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("shop_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdNotEqualTo(Integer value) {
            addCriterion("shop_id <>", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andShopIdNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("shop_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdGreaterThan(Integer value) {
            addCriterion("shop_id >", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andShopIdGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("shop_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("shop_id >=", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andShopIdGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("shop_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdLessThan(Integer value) {
            addCriterion("shop_id <", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andShopIdLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("shop_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdLessThanOrEqualTo(Integer value) {
            addCriterion("shop_id <=", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andShopIdLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("shop_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdIn(List<Integer> values) {
            addCriterion("shop_id in", values, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdNotIn(List<Integer> values) {
            addCriterion("shop_id not in", values, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdBetween(Integer value1, Integer value2) {
            addCriterion("shop_id between", value1, value2, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdNotBetween(Integer value1, Integer value2) {
            addCriterion("shop_id not between", value1, value2, "shopId");
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdIsNull() {
            addCriterion("merchandise_id is null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdIsNotNull() {
            addCriterion("merchandise_id is not null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdEqualTo(Integer value) {
            addCriterion("merchandise_id =", value, "merchandiseId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseIdEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdNotEqualTo(Integer value) {
            addCriterion("merchandise_id <>", value, "merchandiseId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseIdNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdGreaterThan(Integer value) {
            addCriterion("merchandise_id >", value, "merchandiseId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseIdGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("merchandise_id >=", value, "merchandiseId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseIdGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdLessThan(Integer value) {
            addCriterion("merchandise_id <", value, "merchandiseId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseIdLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdLessThanOrEqualTo(Integer value) {
            addCriterion("merchandise_id <=", value, "merchandiseId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseIdLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdIn(List<Integer> values) {
            addCriterion("merchandise_id in", values, "merchandiseId");
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdNotIn(List<Integer> values) {
            addCriterion("merchandise_id not in", values, "merchandiseId");
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdBetween(Integer value1, Integer value2) {
            addCriterion("merchandise_id between", value1, value2, "merchandiseId");
            return (Criteria) this;
        }

        public Criteria andMerchandiseIdNotBetween(Integer value1, Integer value2) {
            addCriterion("merchandise_id not between", value1, value2, "merchandiseId");
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdIsNull() {
            addCriterion("admin_order_id is null");
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdIsNotNull() {
            addCriterion("admin_order_id is not null");
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdEqualTo(Integer value) {
            addCriterion("admin_order_id =", value, "adminOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAdminOrderIdEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("admin_order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdNotEqualTo(Integer value) {
            addCriterion("admin_order_id <>", value, "adminOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAdminOrderIdNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("admin_order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdGreaterThan(Integer value) {
            addCriterion("admin_order_id >", value, "adminOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAdminOrderIdGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("admin_order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("admin_order_id >=", value, "adminOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAdminOrderIdGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("admin_order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdLessThan(Integer value) {
            addCriterion("admin_order_id <", value, "adminOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAdminOrderIdLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("admin_order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("admin_order_id <=", value, "adminOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAdminOrderIdLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("admin_order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdIn(List<Integer> values) {
            addCriterion("admin_order_id in", values, "adminOrderId");
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdNotIn(List<Integer> values) {
            addCriterion("admin_order_id not in", values, "adminOrderId");
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("admin_order_id between", value1, value2, "adminOrderId");
            return (Criteria) this;
        }

        public Criteria andAdminOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("admin_order_id not between", value1, value2, "adminOrderId");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageIsNull() {
            addCriterion("merchandise_image is null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageIsNotNull() {
            addCriterion("merchandise_image is not null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageEqualTo(String value) {
            addCriterion("merchandise_image =", value, "merchandiseImage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseImageEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_image = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageNotEqualTo(String value) {
            addCriterion("merchandise_image <>", value, "merchandiseImage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseImageNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_image <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageGreaterThan(String value) {
            addCriterion("merchandise_image >", value, "merchandiseImage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseImageGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_image > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageGreaterThanOrEqualTo(String value) {
            addCriterion("merchandise_image >=", value, "merchandiseImage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseImageGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_image >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageLessThan(String value) {
            addCriterion("merchandise_image <", value, "merchandiseImage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseImageLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_image < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageLessThanOrEqualTo(String value) {
            addCriterion("merchandise_image <=", value, "merchandiseImage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseImageLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_image <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageLike(String value) {
            addCriterion("merchandise_image like", value, "merchandiseImage");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageNotLike(String value) {
            addCriterion("merchandise_image not like", value, "merchandiseImage");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageIn(List<String> values) {
            addCriterion("merchandise_image in", values, "merchandiseImage");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageNotIn(List<String> values) {
            addCriterion("merchandise_image not in", values, "merchandiseImage");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageBetween(String value1, String value2) {
            addCriterion("merchandise_image between", value1, value2, "merchandiseImage");
            return (Criteria) this;
        }

        public Criteria andMerchandiseImageNotBetween(String value1, String value2) {
            addCriterion("merchandise_image not between", value1, value2, "merchandiseImage");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameIsNull() {
            addCriterion("merchandise_name is null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameIsNotNull() {
            addCriterion("merchandise_name is not null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameEqualTo(String value) {
            addCriterion("merchandise_name =", value, "merchandiseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseNameEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameNotEqualTo(String value) {
            addCriterion("merchandise_name <>", value, "merchandiseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseNameNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameGreaterThan(String value) {
            addCriterion("merchandise_name >", value, "merchandiseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseNameGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameGreaterThanOrEqualTo(String value) {
            addCriterion("merchandise_name >=", value, "merchandiseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseNameGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameLessThan(String value) {
            addCriterion("merchandise_name <", value, "merchandiseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseNameLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameLessThanOrEqualTo(String value) {
            addCriterion("merchandise_name <=", value, "merchandiseName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseNameLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameLike(String value) {
            addCriterion("merchandise_name like", value, "merchandiseName");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameNotLike(String value) {
            addCriterion("merchandise_name not like", value, "merchandiseName");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameIn(List<String> values) {
            addCriterion("merchandise_name in", values, "merchandiseName");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameNotIn(List<String> values) {
            addCriterion("merchandise_name not in", values, "merchandiseName");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameBetween(String value1, String value2) {
            addCriterion("merchandise_name between", value1, value2, "merchandiseName");
            return (Criteria) this;
        }

        public Criteria andMerchandiseNameNotBetween(String value1, String value2) {
            addCriterion("merchandise_name not between", value1, value2, "merchandiseName");
            return (Criteria) this;
        }

        public Criteria andPayPriceIsNull() {
            addCriterion("pay_price is null");
            return (Criteria) this;
        }

        public Criteria andPayPriceIsNotNull() {
            addCriterion("pay_price is not null");
            return (Criteria) this;
        }

        public Criteria andPayPriceEqualTo(BigDecimal value) {
            addCriterion("pay_price =", value, "payPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPayPriceEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("pay_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayPriceNotEqualTo(BigDecimal value) {
            addCriterion("pay_price <>", value, "payPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPayPriceNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("pay_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayPriceGreaterThan(BigDecimal value) {
            addCriterion("pay_price >", value, "payPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPayPriceGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("pay_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_price >=", value, "payPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPayPriceGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("pay_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayPriceLessThan(BigDecimal value) {
            addCriterion("pay_price <", value, "payPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPayPriceLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("pay_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("pay_price <=", value, "payPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPayPriceLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("pay_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayPriceIn(List<BigDecimal> values) {
            addCriterion("pay_price in", values, "payPrice");
            return (Criteria) this;
        }

        public Criteria andPayPriceNotIn(List<BigDecimal> values) {
            addCriterion("pay_price not in", values, "payPrice");
            return (Criteria) this;
        }

        public Criteria andPayPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_price between", value1, value2, "payPrice");
            return (Criteria) this;
        }

        public Criteria andPayPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("pay_price not between", value1, value2, "payPrice");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnIsNull() {
            addCriterion("merchandise_sn is null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnIsNotNull() {
            addCriterion("merchandise_sn is not null");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnEqualTo(String value) {
            addCriterion("merchandise_sn =", value, "merchandiseSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseSnEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_sn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnNotEqualTo(String value) {
            addCriterion("merchandise_sn <>", value, "merchandiseSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseSnNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_sn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnGreaterThan(String value) {
            addCriterion("merchandise_sn >", value, "merchandiseSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseSnGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_sn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnGreaterThanOrEqualTo(String value) {
            addCriterion("merchandise_sn >=", value, "merchandiseSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseSnGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_sn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnLessThan(String value) {
            addCriterion("merchandise_sn <", value, "merchandiseSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseSnLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_sn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnLessThanOrEqualTo(String value) {
            addCriterion("merchandise_sn <=", value, "merchandiseSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andMerchandiseSnLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("merchandise_sn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnLike(String value) {
            addCriterion("merchandise_sn like", value, "merchandiseSn");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnNotLike(String value) {
            addCriterion("merchandise_sn not like", value, "merchandiseSn");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnIn(List<String> values) {
            addCriterion("merchandise_sn in", values, "merchandiseSn");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnNotIn(List<String> values) {
            addCriterion("merchandise_sn not in", values, "merchandiseSn");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnBetween(String value1, String value2) {
            addCriterion("merchandise_sn between", value1, value2, "merchandiseSn");
            return (Criteria) this;
        }

        public Criteria andMerchandiseSnNotBetween(String value1, String value2) {
            addCriterion("merchandise_sn not between", value1, value2, "merchandiseSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnIsNull() {
            addCriterion("order_sn is null");
            return (Criteria) this;
        }

        public Criteria andOrderSnIsNotNull() {
            addCriterion("order_sn is not null");
            return (Criteria) this;
        }

        public Criteria andOrderSnEqualTo(String value) {
            addCriterion("order_sn =", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOrderSnEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("order_sn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnNotEqualTo(String value) {
            addCriterion("order_sn <>", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOrderSnNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("order_sn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThan(String value) {
            addCriterion("order_sn >", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOrderSnGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("order_sn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThanOrEqualTo(String value) {
            addCriterion("order_sn >=", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOrderSnGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("order_sn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThan(String value) {
            addCriterion("order_sn <", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOrderSnLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("order_sn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThanOrEqualTo(String value) {
            addCriterion("order_sn <=", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOrderSnLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("order_sn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnLike(String value) {
            addCriterion("order_sn like", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotLike(String value) {
            addCriterion("order_sn not like", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnIn(List<String> values) {
            addCriterion("order_sn in", values, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotIn(List<String> values) {
            addCriterion("order_sn not in", values, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnBetween(String value1, String value2) {
            addCriterion("order_sn between", value1, value2, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotBetween(String value1, String value2) {
            addCriterion("order_sn not between", value1, value2, "orderSn");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityIsNull() {
            addCriterion("purchase_quantity is null");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityIsNotNull() {
            addCriterion("purchase_quantity is not null");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityEqualTo(String value) {
            addCriterion("purchase_quantity =", value, "purchaseQuantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPurchaseQuantityEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("purchase_quantity = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityNotEqualTo(String value) {
            addCriterion("purchase_quantity <>", value, "purchaseQuantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPurchaseQuantityNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("purchase_quantity <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityGreaterThan(String value) {
            addCriterion("purchase_quantity >", value, "purchaseQuantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPurchaseQuantityGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("purchase_quantity > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityGreaterThanOrEqualTo(String value) {
            addCriterion("purchase_quantity >=", value, "purchaseQuantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPurchaseQuantityGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("purchase_quantity >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityLessThan(String value) {
            addCriterion("purchase_quantity <", value, "purchaseQuantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPurchaseQuantityLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("purchase_quantity < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityLessThanOrEqualTo(String value) {
            addCriterion("purchase_quantity <=", value, "purchaseQuantity");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andPurchaseQuantityLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("purchase_quantity <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityLike(String value) {
            addCriterion("purchase_quantity like", value, "purchaseQuantity");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityNotLike(String value) {
            addCriterion("purchase_quantity not like", value, "purchaseQuantity");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityIn(List<String> values) {
            addCriterion("purchase_quantity in", values, "purchaseQuantity");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityNotIn(List<String> values) {
            addCriterion("purchase_quantity not in", values, "purchaseQuantity");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityBetween(String value1, String value2) {
            addCriterion("purchase_quantity between", value1, value2, "purchaseQuantity");
            return (Criteria) this;
        }

        public Criteria andPurchaseQuantityNotBetween(String value1, String value2) {
            addCriterion("purchase_quantity not between", value1, value2, "purchaseQuantity");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberIsNull() {
            addCriterion("remaining_number is null");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberIsNotNull() {
            addCriterion("remaining_number is not null");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberEqualTo(String value) {
            addCriterion("remaining_number =", value, "remainingNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andRemainingNumberEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("remaining_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainingNumberNotEqualTo(String value) {
            addCriterion("remaining_number <>", value, "remainingNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andRemainingNumberNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("remaining_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainingNumberGreaterThan(String value) {
            addCriterion("remaining_number >", value, "remainingNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andRemainingNumberGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("remaining_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainingNumberGreaterThanOrEqualTo(String value) {
            addCriterion("remaining_number >=", value, "remainingNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andRemainingNumberGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("remaining_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainingNumberLessThan(String value) {
            addCriterion("remaining_number <", value, "remainingNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andRemainingNumberLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("remaining_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainingNumberLessThanOrEqualTo(String value) {
            addCriterion("remaining_number <=", value, "remainingNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andRemainingNumberLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("remaining_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRemainingNumberLike(String value) {
            addCriterion("remaining_number like", value, "remainingNumber");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberNotLike(String value) {
            addCriterion("remaining_number not like", value, "remainingNumber");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberIn(List<String> values) {
            addCriterion("remaining_number in", values, "remainingNumber");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberNotIn(List<String> values) {
            addCriterion("remaining_number not in", values, "remainingNumber");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberBetween(String value1, String value2) {
            addCriterion("remaining_number between", value1, value2, "remainingNumber");
            return (Criteria) this;
        }

        public Criteria andRemainingNumberNotBetween(String value1, String value2) {
            addCriterion("remaining_number not between", value1, value2, "remainingNumber");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIsNull() {
            addCriterion("operation_type is null");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIsNotNull() {
            addCriterion("operation_type is not null");
            return (Criteria) this;
        }

        public Criteria andOperationTypeEqualTo(Byte value) {
            addCriterion("operation_type =", value, "operationType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOperationTypeEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("operation_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationTypeNotEqualTo(Byte value) {
            addCriterion("operation_type <>", value, "operationType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOperationTypeNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("operation_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationTypeGreaterThan(Byte value) {
            addCriterion("operation_type >", value, "operationType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOperationTypeGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("operation_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("operation_type >=", value, "operationType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOperationTypeGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("operation_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationTypeLessThan(Byte value) {
            addCriterion("operation_type <", value, "operationType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOperationTypeLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("operation_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationTypeLessThanOrEqualTo(Byte value) {
            addCriterion("operation_type <=", value, "operationType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andOperationTypeLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("operation_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationTypeIn(List<Byte> values) {
            addCriterion("operation_type in", values, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeNotIn(List<Byte> values) {
            addCriterion("operation_type not in", values, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeBetween(Byte value1, Byte value2) {
            addCriterion("operation_type between", value1, value2, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("operation_type not between", value1, value2, "operationType");
            return (Criteria) this;
        }

        public Criteria andContentIsNull() {
            addCriterion("content is null");
            return (Criteria) this;
        }

        public Criteria andContentIsNotNull() {
            addCriterion("content is not null");
            return (Criteria) this;
        }

        public Criteria andContentEqualTo(String value) {
            addCriterion("content =", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andContentEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("content = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentNotEqualTo(String value) {
            addCriterion("content <>", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andContentNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("content <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentGreaterThan(String value) {
            addCriterion("content >", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andContentGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("content > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentGreaterThanOrEqualTo(String value) {
            addCriterion("content >=", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andContentGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("content >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentLessThan(String value) {
            addCriterion("content <", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andContentLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("content < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentLessThanOrEqualTo(String value) {
            addCriterion("content <=", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andContentLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("content <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentLike(String value) {
            addCriterion("content like", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotLike(String value) {
            addCriterion("content not like", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentIn(List<String> values) {
            addCriterion("content in", values, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotIn(List<String> values) {
            addCriterion("content not in", values, "content");
            return (Criteria) this;
        }

        public Criteria andContentBetween(String value1, String value2) {
            addCriterion("content between", value1, value2, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotBetween(String value1, String value2) {
            addCriterion("content not between", value1, value2, "content");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andUserNameEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("user_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andUserNameNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("user_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andUserNameGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("user_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andUserNameGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("user_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andUserNameLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("user_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andUserNameLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("user_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("user_name in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("user_name not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andLogTypeIsNull() {
            addCriterion("log_type is null");
            return (Criteria) this;
        }

        public Criteria andLogTypeIsNotNull() {
            addCriterion("log_type is not null");
            return (Criteria) this;
        }

        public Criteria andLogTypeEqualTo(Byte value) {
            addCriterion("log_type =", value, "logType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andLogTypeEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("log_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogTypeNotEqualTo(Byte value) {
            addCriterion("log_type <>", value, "logType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andLogTypeNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("log_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogTypeGreaterThan(Byte value) {
            addCriterion("log_type >", value, "logType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andLogTypeGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("log_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("log_type >=", value, "logType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andLogTypeGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("log_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogTypeLessThan(Byte value) {
            addCriterion("log_type <", value, "logType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andLogTypeLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("log_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogTypeLessThanOrEqualTo(Byte value) {
            addCriterion("log_type <=", value, "logType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andLogTypeLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("log_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLogTypeIn(List<Byte> values) {
            addCriterion("log_type in", values, "logType");
            return (Criteria) this;
        }

        public Criteria andLogTypeNotIn(List<Byte> values) {
            addCriterion("log_type not in", values, "logType");
            return (Criteria) this;
        }

        public Criteria andLogTypeBetween(Byte value1, Byte value2) {
            addCriterion("log_type between", value1, value2, "logType");
            return (Criteria) this;
        }

        public Criteria andLogTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("log_type not between", value1, value2, "logType");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddUserIdIsNull() {
            addCriterion("add_user_id is null");
            return (Criteria) this;
        }

        public Criteria andAddUserIdIsNotNull() {
            addCriterion("add_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andAddUserIdEqualTo(Integer value) {
            addCriterion("add_user_id =", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdNotEqualTo(Integer value) {
            addCriterion("add_user_id <>", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdNotEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdGreaterThan(Integer value) {
            addCriterion("add_user_id >", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdGreaterThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("add_user_id >=", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdGreaterThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdLessThan(Integer value) {
            addCriterion("add_user_id <", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdLessThanColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("add_user_id <=", value, "addUserId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andAddUserIdLessThanOrEqualToColumn(LitemallMerchandiseLog.Column column) {
            addCriterion(new StringBuilder("add_user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddUserIdIn(List<Integer> values) {
            addCriterion("add_user_id in", values, "addUserId");
            return (Criteria) this;
        }

        public Criteria andAddUserIdNotIn(List<Integer> values) {
            addCriterion("add_user_id not in", values, "addUserId");
            return (Criteria) this;
        }

        public Criteria andAddUserIdBetween(Integer value1, Integer value2) {
            addCriterion("add_user_id between", value1, value2, "addUserId");
            return (Criteria) this;
        }

        public Criteria andAddUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("add_user_id not between", value1, value2, "addUserId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        private LitemallMerchandiseLogExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        protected Criteria(LitemallMerchandiseLogExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public LitemallMerchandiseLogExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallMerchandiseLog.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallMerchandiseLog.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_merchandise_log
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_merchandise_log
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_merchandise_log
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallMerchandiseLogExample example);
    }
}