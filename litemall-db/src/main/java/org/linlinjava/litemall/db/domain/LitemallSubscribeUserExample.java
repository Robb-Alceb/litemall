package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallSubscribeUserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public LitemallSubscribeUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public LitemallSubscribeUserExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public LitemallSubscribeUserExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallSubscribeUserExample example = new LitemallSubscribeUserExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public LitemallSubscribeUserExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public LitemallSubscribeUserExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andShopIdIsNull() {
            addCriterion("shop_id is null");
            return (Criteria) this;
        }

        public Criteria andShopIdIsNotNull() {
            addCriterion("shop_id is not null");
            return (Criteria) this;
        }

        public Criteria andShopIdEqualTo(Integer value) {
            addCriterion("shop_id =", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andShopIdEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("shop_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdNotEqualTo(Integer value) {
            addCriterion("shop_id <>", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andShopIdNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("shop_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdGreaterThan(Integer value) {
            addCriterion("shop_id >", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andShopIdGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("shop_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("shop_id >=", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andShopIdGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("shop_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdLessThan(Integer value) {
            addCriterion("shop_id <", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andShopIdLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("shop_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdLessThanOrEqualTo(Integer value) {
            addCriterion("shop_id <=", value, "shopId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andShopIdLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("shop_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andShopIdIn(List<Integer> values) {
            addCriterion("shop_id in", values, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdNotIn(List<Integer> values) {
            addCriterion("shop_id not in", values, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdBetween(Integer value1, Integer value2) {
            addCriterion("shop_id between", value1, value2, "shopId");
            return (Criteria) this;
        }

        public Criteria andShopIdNotBetween(Integer value1, Integer value2) {
            addCriterion("shop_id not between", value1, value2, "shopId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNull() {
            addCriterion("goods_id is null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdIsNotNull() {
            addCriterion("goods_id is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsIdEqualTo(Integer value) {
            addCriterion("goods_id =", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("goods_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotEqualTo(Integer value) {
            addCriterion("goods_id <>", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("goods_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThan(Integer value) {
            addCriterion("goods_id >", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("goods_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("goods_id >=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("goods_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThan(Integer value) {
            addCriterion("goods_id <", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("goods_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdLessThanOrEqualTo(Integer value) {
            addCriterion("goods_id <=", value, "goodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andGoodsIdLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("goods_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsIdIn(List<Integer> values) {
            addCriterion("goods_id in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotIn(List<Integer> values) {
            addCriterion("goods_id not in", values, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdBetween(Integer value1, Integer value2) {
            addCriterion("goods_id between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andGoodsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("goods_id not between", value1, value2, "goodsId");
            return (Criteria) this;
        }

        public Criteria andAddressIdIsNull() {
            addCriterion("address_id is null");
            return (Criteria) this;
        }

        public Criteria andAddressIdIsNotNull() {
            addCriterion("address_id is not null");
            return (Criteria) this;
        }

        public Criteria andAddressIdEqualTo(Integer value) {
            addCriterion("address_id =", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddressIdEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("address_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdNotEqualTo(Integer value) {
            addCriterion("address_id <>", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddressIdNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("address_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdGreaterThan(Integer value) {
            addCriterion("address_id >", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddressIdGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("address_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("address_id >=", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddressIdGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("address_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdLessThan(Integer value) {
            addCriterion("address_id <", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddressIdLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("address_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdLessThanOrEqualTo(Integer value) {
            addCriterion("address_id <=", value, "addressId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddressIdLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("address_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddressIdIn(List<Integer> values) {
            addCriterion("address_id in", values, "addressId");
            return (Criteria) this;
        }

        public Criteria andAddressIdNotIn(List<Integer> values) {
            addCriterion("address_id not in", values, "addressId");
            return (Criteria) this;
        }

        public Criteria andAddressIdBetween(Integer value1, Integer value2) {
            addCriterion("address_id between", value1, value2, "addressId");
            return (Criteria) this;
        }

        public Criteria andAddressIdNotBetween(Integer value1, Integer value2) {
            addCriterion("address_id not between", value1, value2, "addressId");
            return (Criteria) this;
        }

        public Criteria andMethodIsNull() {
            addCriterion("`method` is null");
            return (Criteria) this;
        }

        public Criteria andMethodIsNotNull() {
            addCriterion("`method` is not null");
            return (Criteria) this;
        }

        public Criteria andMethodEqualTo(Byte value) {
            addCriterion("`method` =", value, "method");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andMethodEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("`method` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMethodNotEqualTo(Byte value) {
            addCriterion("`method` <>", value, "method");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andMethodNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("`method` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThan(Byte value) {
            addCriterion("`method` >", value, "method");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andMethodGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("`method` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThanOrEqualTo(Byte value) {
            addCriterion("`method` >=", value, "method");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andMethodGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("`method` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMethodLessThan(Byte value) {
            addCriterion("`method` <", value, "method");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andMethodLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("`method` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMethodLessThanOrEqualTo(Byte value) {
            addCriterion("`method` <=", value, "method");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andMethodLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("`method` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMethodIn(List<Byte> values) {
            addCriterion("`method` in", values, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotIn(List<Byte> values) {
            addCriterion("`method` not in", values, "method");
            return (Criteria) this;
        }

        public Criteria andMethodBetween(Byte value1, Byte value2) {
            addCriterion("`method` between", value1, value2, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotBetween(Byte value1, Byte value2) {
            addCriterion("`method` not between", value1, value2, "method");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodIsNull() {
            addCriterion("delivery_method is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodIsNotNull() {
            addCriterion("delivery_method is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodEqualTo(Byte value) {
            addCriterion("delivery_method =", value, "deliveryMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryMethodEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_method = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodNotEqualTo(Byte value) {
            addCriterion("delivery_method <>", value, "deliveryMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryMethodNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_method <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodGreaterThan(Byte value) {
            addCriterion("delivery_method >", value, "deliveryMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryMethodGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_method > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodGreaterThanOrEqualTo(Byte value) {
            addCriterion("delivery_method >=", value, "deliveryMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryMethodGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_method >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodLessThan(Byte value) {
            addCriterion("delivery_method <", value, "deliveryMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryMethodLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_method < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodLessThanOrEqualTo(Byte value) {
            addCriterion("delivery_method <=", value, "deliveryMethod");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryMethodLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_method <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodIn(List<Byte> values) {
            addCriterion("delivery_method in", values, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodNotIn(List<Byte> values) {
            addCriterion("delivery_method not in", values, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodBetween(Byte value1, Byte value2) {
            addCriterion("delivery_method between", value1, value2, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryMethodNotBetween(Byte value1, Byte value2) {
            addCriterion("delivery_method not between", value1, value2, "deliveryMethod");
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysIsNull() {
            addCriterion("delivery_days is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysIsNotNull() {
            addCriterion("delivery_days is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysEqualTo(Integer value) {
            addCriterion("delivery_days =", value, "deliveryDays");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryDaysEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_days = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysNotEqualTo(Integer value) {
            addCriterion("delivery_days <>", value, "deliveryDays");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryDaysNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_days <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysGreaterThan(Integer value) {
            addCriterion("delivery_days >", value, "deliveryDays");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryDaysGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_days > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("delivery_days >=", value, "deliveryDays");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryDaysGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_days >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysLessThan(Integer value) {
            addCriterion("delivery_days <", value, "deliveryDays");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryDaysLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_days < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysLessThanOrEqualTo(Integer value) {
            addCriterion("delivery_days <=", value, "deliveryDays");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryDaysLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_days <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysIn(List<Integer> values) {
            addCriterion("delivery_days in", values, "deliveryDays");
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysNotIn(List<Integer> values) {
            addCriterion("delivery_days not in", values, "deliveryDays");
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysBetween(Integer value1, Integer value2) {
            addCriterion("delivery_days between", value1, value2, "deliveryDays");
            return (Criteria) this;
        }

        public Criteria andDeliveryDaysNotBetween(Integer value1, Integer value2) {
            addCriterion("delivery_days not between", value1, value2, "deliveryDays");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeIsNull() {
            addCriterion("delivery_time is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeIsNotNull() {
            addCriterion("delivery_time is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeEqualTo(String value) {
            addCriterion("delivery_time =", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeNotEqualTo(String value) {
            addCriterion("delivery_time <>", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeGreaterThan(String value) {
            addCriterion("delivery_time >", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeGreaterThanOrEqualTo(String value) {
            addCriterion("delivery_time >=", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeLessThan(String value) {
            addCriterion("delivery_time <", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeLessThanOrEqualTo(String value) {
            addCriterion("delivery_time <=", value, "deliveryTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeliveryTimeLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("delivery_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeLike(String value) {
            addCriterion("delivery_time like", value, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeNotLike(String value) {
            addCriterion("delivery_time not like", value, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeIn(List<String> values) {
            addCriterion("delivery_time in", values, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeNotIn(List<String> values) {
            addCriterion("delivery_time not in", values, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeBetween(String value1, String value2) {
            addCriterion("delivery_time between", value1, value2, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryTimeNotBetween(String value1, String value2) {
            addCriterion("delivery_time not between", value1, value2, "deliveryTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNull() {
            addCriterion("start_time is null");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNotNull() {
            addCriterion("start_time is not null");
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualTo(LocalDateTime value) {
            addCriterion("start_time =", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andStartTimeEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("start_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualTo(LocalDateTime value) {
            addCriterion("start_time <>", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andStartTimeNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("start_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThan(LocalDateTime value) {
            addCriterion("start_time >", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andStartTimeGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("start_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("start_time >=", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andStartTimeGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("start_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThan(LocalDateTime value) {
            addCriterion("start_time <", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andStartTimeLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("start_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("start_time <=", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andStartTimeLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("start_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeIn(List<LocalDateTime> values) {
            addCriterion("start_time in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotIn(List<LocalDateTime> values) {
            addCriterion("start_time not in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("start_time between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("start_time not between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andEntTimeIsNull() {
            addCriterion("ent_time is null");
            return (Criteria) this;
        }

        public Criteria andEntTimeIsNotNull() {
            addCriterion("ent_time is not null");
            return (Criteria) this;
        }

        public Criteria andEntTimeEqualTo(LocalDateTime value) {
            addCriterion("ent_time =", value, "entTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andEntTimeEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("ent_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEntTimeNotEqualTo(LocalDateTime value) {
            addCriterion("ent_time <>", value, "entTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andEntTimeNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("ent_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEntTimeGreaterThan(LocalDateTime value) {
            addCriterion("ent_time >", value, "entTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andEntTimeGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("ent_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEntTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("ent_time >=", value, "entTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andEntTimeGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("ent_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEntTimeLessThan(LocalDateTime value) {
            addCriterion("ent_time <", value, "entTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andEntTimeLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("ent_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEntTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("ent_time <=", value, "entTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andEntTimeLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("ent_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEntTimeIn(List<LocalDateTime> values) {
            addCriterion("ent_time in", values, "entTime");
            return (Criteria) this;
        }

        public Criteria andEntTimeNotIn(List<LocalDateTime> values) {
            addCriterion("ent_time not in", values, "entTime");
            return (Criteria) this;
        }

        public Criteria andEntTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("ent_time between", value1, value2, "entTime");
            return (Criteria) this;
        }

        public Criteria andEntTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("ent_time not between", value1, value2, "entTime");
            return (Criteria) this;
        }

        public Criteria andAutoSubIsNull() {
            addCriterion("auto_sub is null");
            return (Criteria) this;
        }

        public Criteria andAutoSubIsNotNull() {
            addCriterion("auto_sub is not null");
            return (Criteria) this;
        }

        public Criteria andAutoSubEqualTo(Boolean value) {
            addCriterion("auto_sub =", value, "autoSub");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoSubEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_sub = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoSubNotEqualTo(Boolean value) {
            addCriterion("auto_sub <>", value, "autoSub");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoSubNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_sub <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoSubGreaterThan(Boolean value) {
            addCriterion("auto_sub >", value, "autoSub");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoSubGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_sub > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoSubGreaterThanOrEqualTo(Boolean value) {
            addCriterion("auto_sub >=", value, "autoSub");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoSubGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_sub >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoSubLessThan(Boolean value) {
            addCriterion("auto_sub <", value, "autoSub");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoSubLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_sub < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoSubLessThanOrEqualTo(Boolean value) {
            addCriterion("auto_sub <=", value, "autoSub");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoSubLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_sub <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoSubIn(List<Boolean> values) {
            addCriterion("auto_sub in", values, "autoSub");
            return (Criteria) this;
        }

        public Criteria andAutoSubNotIn(List<Boolean> values) {
            addCriterion("auto_sub not in", values, "autoSub");
            return (Criteria) this;
        }

        public Criteria andAutoSubBetween(Boolean value1, Boolean value2) {
            addCriterion("auto_sub between", value1, value2, "autoSub");
            return (Criteria) this;
        }

        public Criteria andAutoSubNotBetween(Boolean value1, Boolean value2) {
            addCriterion("auto_sub not between", value1, value2, "autoSub");
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeIsNull() {
            addCriterion("auto_pay_type is null");
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeIsNotNull() {
            addCriterion("auto_pay_type is not null");
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeEqualTo(Byte value) {
            addCriterion("auto_pay_type =", value, "autoPayType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayTypeEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeNotEqualTo(Byte value) {
            addCriterion("auto_pay_type <>", value, "autoPayType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayTypeNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeGreaterThan(Byte value) {
            addCriterion("auto_pay_type >", value, "autoPayType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayTypeGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("auto_pay_type >=", value, "autoPayType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayTypeGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeLessThan(Byte value) {
            addCriterion("auto_pay_type <", value, "autoPayType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayTypeLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeLessThanOrEqualTo(Byte value) {
            addCriterion("auto_pay_type <=", value, "autoPayType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayTypeLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeIn(List<Byte> values) {
            addCriterion("auto_pay_type in", values, "autoPayType");
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeNotIn(List<Byte> values) {
            addCriterion("auto_pay_type not in", values, "autoPayType");
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeBetween(Byte value1, Byte value2) {
            addCriterion("auto_pay_type between", value1, value2, "autoPayType");
            return (Criteria) this;
        }

        public Criteria andAutoPayTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("auto_pay_type not between", value1, value2, "autoPayType");
            return (Criteria) this;
        }

        public Criteria andAutoPayIdIsNull() {
            addCriterion("auto_pay_id is null");
            return (Criteria) this;
        }

        public Criteria andAutoPayIdIsNotNull() {
            addCriterion("auto_pay_id is not null");
            return (Criteria) this;
        }

        public Criteria andAutoPayIdEqualTo(Integer value) {
            addCriterion("auto_pay_id =", value, "autoPayId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayIdEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayIdNotEqualTo(Integer value) {
            addCriterion("auto_pay_id <>", value, "autoPayId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayIdNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayIdGreaterThan(Integer value) {
            addCriterion("auto_pay_id >", value, "autoPayId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayIdGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("auto_pay_id >=", value, "autoPayId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayIdGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayIdLessThan(Integer value) {
            addCriterion("auto_pay_id <", value, "autoPayId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayIdLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayIdLessThanOrEqualTo(Integer value) {
            addCriterion("auto_pay_id <=", value, "autoPayId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAutoPayIdLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("auto_pay_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAutoPayIdIn(List<Integer> values) {
            addCriterion("auto_pay_id in", values, "autoPayId");
            return (Criteria) this;
        }

        public Criteria andAutoPayIdNotIn(List<Integer> values) {
            addCriterion("auto_pay_id not in", values, "autoPayId");
            return (Criteria) this;
        }

        public Criteria andAutoPayIdBetween(Integer value1, Integer value2) {
            addCriterion("auto_pay_id between", value1, value2, "autoPayId");
            return (Criteria) this;
        }

        public Criteria andAutoPayIdNotBetween(Integer value1, Integer value2) {
            addCriterion("auto_pay_id not between", value1, value2, "autoPayId");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallSubscribeUser.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        private LitemallSubscribeUserExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        protected Criteria(LitemallSubscribeUserExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public LitemallSubscribeUserExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallSubscribeUser.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallSubscribeUser.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_subscribe_user
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_subscribe_user
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_subscribe_user
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallSubscribeUserExample example);
    }
}